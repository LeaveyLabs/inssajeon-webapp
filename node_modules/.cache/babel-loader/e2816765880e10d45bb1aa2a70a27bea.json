{"ast":null,"code":"import _mock from './_mock';\nimport { randomInArray } from './funcs'; // ----------------------------------------------------------------------\n\nexport const _carouselsExample = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  description: _mock.text.description(index)\n}));\nexport const _carouselsMembers = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  role: _mock.role(index),\n  avatar: `https://minimal-assets-api.vercel.app/assets/images/members/member-${index + 1}.jpg`\n})); // ----------------------------------------------------------------------\n\nexport const _invoice = {\n  id: `${Date.now()}`,\n  taxes: 5,\n  discount: 10,\n  status: 'paid',\n  invoiceFrom: {\n    name: _mock.name.fullName(1),\n    address: _mock.address.fullAddress(1),\n    company: _mock.company(1),\n    email: _mock.email(1),\n    phone: _mock.phoneNumber(1)\n  },\n  invoiceTo: {\n    name: _mock.name.fullName(2),\n    address: _mock.address.fullAddress(2),\n    company: _mock.company(2),\n    email: _mock.email(2),\n    phone: _mock.phoneNumber(2)\n  },\n  items: [...Array(3)].map((_, index) => ({\n    id: _mock.id(index),\n    title: _mock.text.title(index),\n    description: _mock.text.description(index),\n    qty: 5,\n    price: _mock.number.price(index)\n  }))\n}; // ----------------------------------------------------------------------\n\nexport const _faqs = [...Array(8)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Questions ${index + 1}`,\n  detail: _mock.text.description(index)\n})); // ----------------------------------------------------------------------\n\nexport const _addressBooks = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  receiver: _mock.name.fullName(index),\n  fullAddress: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  addressType: index === 0 ? 'Home' : 'Office',\n  isDefault: index === 0\n})); // ----------------------------------------------------------------------\n\nexport const _skills = [...Array(3)].map((_, index) => ({\n  label: ['Development', 'Design', 'Marketing'][index],\n  value: _mock.number.percent(index)\n})); // ----------------------------------------------------------------------\n\nexport const _accordions = [...Array(4)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Accordion ${index + 1}`,\n  subHeading: _mock.text.title(index),\n  detail: _mock.text.description(index)\n})); // ----------------------------------------------------------------------\n\nexport const _dataGrid = [...Array(36)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  email: _mock.email(index),\n  lastLogin: _mock.time(index),\n  performance: _mock.number.percent(index),\n  rating: _mock.number.rating(index),\n  status: randomInArray(['online', 'away', 'busy']),\n  isAdmin: _mock.boolean(index),\n  lastName: _mock.name.lastName(index),\n  firstName: _mock.name.firstName(index),\n  age: _mock.number.age(index)\n})); // ----------------------------------------------------------------------\n\nexport const _megaMenuProducts = [...Array(10)].map((_, index) => ({\n  name: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  path: '#'\n})); // ----------------------------------------------------------------------\n\nexport const _contacts = [...Array(20)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  username: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  address: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  email: _mock.email(index),\n  lastActivity: _mock.time(index),\n  status: randomInArray(['online', 'offline', 'away', 'busy']),\n  position: _mock.role(index)\n})); // ----------------------------------------------------------------------\n\nexport const _notifications = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: ['Your order is placed', 'Sylvan King', 'You have new message', 'You have new mail', 'Delivery processing'][index],\n  description: ['waiting for shipping', 'answered to your comment on the Minimal', '5 unread messages', 'sent from Guido Padberg', 'Your order is being shipped'][index],\n  avatar: [null, _mock.image.avatar(2), null, null, null][index],\n  type: ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'][index],\n  createdAt: _mock.time(index),\n  isUnRead: [true, true, false, false, false][index]\n})); // ----------------------------------------------------------------------\n\nexport const _mapContact = [{\n  latlng: [33, 65],\n  address: _mock.address.fullAddress(1),\n  phoneNumber: _mock.phoneNumber(1)\n}, {\n  latlng: [-12.5, 18.5],\n  address: _mock.address.fullAddress(2),\n  phoneNumber: _mock.phoneNumber(2)\n}];","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/_mock/_others.ts"],"names":["_mock","randomInArray","_carouselsExample","Array","map","_","index","id","title","text","image","feed","description","_carouselsMembers","name","fullName","role","avatar","_invoice","Date","now","taxes","discount","status","invoiceFrom","address","fullAddress","company","email","phone","phoneNumber","invoiceTo","items","qty","price","number","_faqs","value","heading","detail","_addressBooks","receiver","addressType","isDefault","_skills","label","percent","_accordions","subHeading","_dataGrid","lastLogin","time","performance","rating","isAdmin","boolean","lastName","firstName","age","_megaMenuProducts","path","_contacts","username","lastActivity","position","_notifications","type","createdAt","isUnRead","_mapContact","latlng"],"mappings":"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","sourcesContent":["import _mock from './_mock';\nimport { randomInArray } from './funcs';\n\n// ----------------------------------------------------------------------\n\nexport const _carouselsExample = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  description: _mock.text.description(index),\n}));\n\nexport const _carouselsMembers = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  role: _mock.role(index),\n  avatar: `https://minimal-assets-api.vercel.app/assets/images/members/member-${index + 1}.jpg`,\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _invoice = {\n  id: `${Date.now()}`,\n  taxes: 5,\n  discount: 10,\n  status: 'paid',\n  invoiceFrom: {\n    name: _mock.name.fullName(1),\n    address: _mock.address.fullAddress(1),\n    company: _mock.company(1),\n    email: _mock.email(1),\n    phone: _mock.phoneNumber(1),\n  },\n  invoiceTo: {\n    name: _mock.name.fullName(2),\n    address: _mock.address.fullAddress(2),\n    company: _mock.company(2),\n    email: _mock.email(2),\n    phone: _mock.phoneNumber(2),\n  },\n  items: [...Array(3)].map((_, index) => ({\n    id: _mock.id(index),\n    title: _mock.text.title(index),\n    description: _mock.text.description(index),\n    qty: 5,\n    price: _mock.number.price(index),\n  })),\n};\n\n// ----------------------------------------------------------------------\n\nexport const _faqs = [...Array(8)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Questions ${index + 1}`,\n  detail: _mock.text.description(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _addressBooks = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  receiver: _mock.name.fullName(index),\n  fullAddress: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  addressType: index === 0 ? 'Home' : 'Office',\n  isDefault: index === 0,\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _skills = [...Array(3)].map((_, index) => ({\n  label: ['Development', 'Design', 'Marketing'][index],\n  value: _mock.number.percent(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _accordions = [...Array(4)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Accordion ${index + 1}`,\n  subHeading: _mock.text.title(index),\n  detail: _mock.text.description(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _dataGrid = [...Array(36)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  email: _mock.email(index),\n  lastLogin: _mock.time(index),\n  performance: _mock.number.percent(index),\n  rating: _mock.number.rating(index),\n  status: randomInArray(['online', 'away', 'busy']),\n  isAdmin: _mock.boolean(index),\n  lastName: _mock.name.lastName(index),\n  firstName: _mock.name.firstName(index),\n  age: _mock.number.age(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _megaMenuProducts = [...Array(10)].map((_, index) => ({\n  name: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  path: '#',\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _contacts = [...Array(20)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  username: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  address: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  email: _mock.email(index),\n  lastActivity: _mock.time(index),\n  status: randomInArray(['online', 'offline', 'away', 'busy']),\n  position: _mock.role(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _notifications = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: [\n    'Your order is placed',\n    'Sylvan King',\n    'You have new message',\n    'You have new mail',\n    'Delivery processing',\n  ][index],\n  description: [\n    'waiting for shipping',\n    'answered to your comment on the Minimal',\n    '5 unread messages',\n    'sent from Guido Padberg',\n    'Your order is being shipped',\n  ][index],\n  avatar: [null, _mock.image.avatar(2), null, null, null][index],\n  type: ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'][index],\n  createdAt: _mock.time(index),\n  isUnRead: [true, true, false, false, false][index],\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _mapContact = [\n  {\n    latlng: [33, 65],\n    address: _mock.address.fullAddress(1),\n    phoneNumber: _mock.phoneNumber(1),\n  },\n  {\n    latlng: [-12.5, 18.5],\n    address: _mock.address.fullAddress(2),\n    phoneNumber: _mock.phoneNumber(2),\n  },\n];\n"]},"metadata":{},"sourceType":"module"}