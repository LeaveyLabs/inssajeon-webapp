{"ast":null,"code":"import _mock from './_mock';\nimport { randomInArray } from './funcs'; // ----------------------------------------------------------------------\n\nexport const _bookings = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  checkIn: _mock.time(index),\n  checkOut: _mock.time(index),\n  phoneNumber: _mock.phoneNumber(index),\n  status: randomInArray(['pending', 'un_paid', 'paid']),\n  roomType: randomInArray(['double', 'king', 'single'])\n}));\nexport const _bookingsOverview = [...Array(3)].map((_, index) => ({\n  status: ['Pending', 'Cancel', 'Done'][index],\n  quantity: _mock.number.percent(index) * 1000,\n  value: _mock.number.percent(index)\n}));\nexport const _bookingReview = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  description: _mock.text.description(index),\n  avatar: _mock.image.avatar(index),\n  rating: _mock.number.rating(index),\n  postedAt: _mock.time(index),\n  tags: ['Great Sevice', 'Recommended', 'Best Price']\n}));\nexport const _bookingNew = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  bookdAt: _mock.time(index),\n  roomNumber: 'A-21',\n  roomType: randomInArray(['double', 'king', 'single']),\n  person: '3-5',\n  cover: `https://minimal-assets-api.vercel.app/assets/images/rooms/room-${index + 1}.jpg`\n}));","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/_mock/_booking.ts"],"names":["_mock","randomInArray","_bookings","Array","map","_","index","id","name","fullName","avatar","image","checkIn","time","checkOut","phoneNumber","status","roomType","_bookingsOverview","quantity","number","percent","value","_bookingReview","description","text","rating","postedAt","tags","_bookingNew","bookdAt","roomNumber","person","cover"],"mappings":"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","sourcesContent":["import _mock from './_mock';\nimport { randomInArray } from './funcs';\n\n// ----------------------------------------------------------------------\n\nexport const _bookings = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  checkIn: _mock.time(index),\n  checkOut: _mock.time(index),\n  phoneNumber: _mock.phoneNumber(index),\n  status: randomInArray(['pending', 'un_paid', 'paid']),\n  roomType: randomInArray(['double', 'king', 'single']),\n}));\n\nexport const _bookingsOverview = [...Array(3)].map((_, index) => ({\n  status: ['Pending', 'Cancel', 'Done'][index],\n  quantity: _mock.number.percent(index) * 1000,\n  value: _mock.number.percent(index),\n}));\n\nexport const _bookingReview = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  description: _mock.text.description(index),\n  avatar: _mock.image.avatar(index),\n  rating: _mock.number.rating(index),\n  postedAt: _mock.time(index),\n  tags: ['Great Sevice', 'Recommended', 'Best Price'],\n}));\n\nexport const _bookingNew = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  bookdAt: _mock.time(index),\n  roomNumber: 'A-21',\n  roomType: randomInArray(['double', 'king', 'single']),\n  person: '3-5',\n  cover: `https://minimal-assets-api.vercel.app/assets/images/rooms/room-${index + 1}.jpg`,\n}));\n"]},"metadata":{},"sourceType":"module"}