{"ast":null,"code":"var _jsxFileName = \"/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/components/animate/FabButtonAnimate.tsx\",\n    _s = $RefreshSig$();\n\nimport { m } from 'framer-motion';\nimport { forwardRef } from 'react'; // @mui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Fab } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FabButtonAnimate = /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    color = 'primary',\n    size = 'large',\n    children,\n    sx,\n    sxWrap,\n    ...other\n  } = _ref;\n  const theme = useTheme();\n\n  if (color === 'default' || color === 'inherit' || color === 'primary' || color === 'secondary') {\n    return /*#__PURE__*/_jsxDEV(AnimateWrap, {\n      size: size,\n      sxWrap: sxWrap,\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        ref: ref,\n        size: size,\n        color: color,\n        sx: sx,\n        ...other,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AnimateWrap, {\n    size: size,\n    sxWrap: sxWrap,\n    children: /*#__PURE__*/_jsxDEV(Fab, {\n      ref: ref,\n      size: size,\n      sx: {\n        boxShadow: theme.customShadows[color],\n        color: theme.palette[color].contrastText,\n        bgcolor: theme.palette[color].main,\n        '&:hover': {\n          bgcolor: theme.palette[color].dark\n        },\n        ...sx\n      },\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n}));\n_c2 = FabButtonAnimate;\nexport default FabButtonAnimate; // ----------------------------------------------------------------------\n\nconst varSmall = {\n  hover: {\n    scale: 1.07\n  },\n  tap: {\n    scale: 0.97\n  }\n};\nconst varMedium = {\n  hover: {\n    scale: 1.06\n  },\n  tap: {\n    scale: 0.98\n  }\n};\nconst varLarge = {\n  hover: {\n    scale: 1.05\n  },\n  tap: {\n    scale: 0.99\n  }\n};\n\nfunction AnimateWrap(_ref2) {\n  let {\n    size,\n    children,\n    sxWrap\n  } = _ref2;\n  const isSmall = size === 'small';\n  const isLarge = size === 'large';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: m.div,\n    whileTap: \"tap\",\n    whileHover: \"hover\",\n    variants: isSmall && varSmall || isLarge && varLarge || varMedium,\n    sx: {\n      display: 'inline-flex',\n      ...sxWrap\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = AnimateWrap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FabButtonAnimate$forwardRef\");\n$RefreshReg$(_c2, \"FabButtonAnimate\");\n$RefreshReg$(_c3, \"AnimateWrap\");","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/components/animate/FabButtonAnimate.tsx"],"names":["m","forwardRef","useTheme","Box","Fab","FabButtonAnimate","ref","color","size","children","sx","sxWrap","other","theme","boxShadow","customShadows","palette","contrastText","bgcolor","main","dark","varSmall","hover","scale","tap","varMedium","varLarge","AnimateWrap","isSmall","isLarge","div","display"],"mappings":"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","sourcesContent":["import { m } from 'framer-motion';\nimport { forwardRef, ReactNode } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Fab, FabProps, SxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends Omit<FabProps, 'color'> {\n  sxWrap?: SxProps;\n  color?:\n    | 'inherit'\n    | 'default'\n    | 'primary'\n    | 'secondary'\n    | 'info'\n    | 'success'\n    | 'warning'\n    | 'error';\n}\n\nconst FabButtonAnimate = forwardRef<HTMLButtonElement, Props>(\n  ({ color = 'primary', size = 'large', children, sx, sxWrap, ...other }, ref) => {\n    const theme = useTheme();\n\n    if (\n      color === 'default' ||\n      color === 'inherit' ||\n      color === 'primary' ||\n      color === 'secondary'\n    ) {\n      return (\n        <AnimateWrap size={size} sxWrap={sxWrap}>\n          <Fab ref={ref} size={size} color={color} sx={sx} {...other}>\n            {children}\n          </Fab>\n        </AnimateWrap>\n      );\n    }\n\n    return (\n      <AnimateWrap size={size} sxWrap={sxWrap}>\n        <Fab\n          ref={ref}\n          size={size}\n          sx={{\n            boxShadow: theme.customShadows[color],\n            color: theme.palette[color].contrastText,\n            bgcolor: theme.palette[color].main,\n            '&:hover': {\n              bgcolor: theme.palette[color].dark,\n            },\n            ...sx,\n          }}\n          {...other}\n        >\n          {children}\n        </Fab>\n      </AnimateWrap>\n    );\n  }\n);\n\nexport default FabButtonAnimate;\n\n// ----------------------------------------------------------------------\n\ntype AnimateWrapProp = {\n  children: ReactNode;\n  size: 'small' | 'medium' | 'large';\n  sxWrap?: SxProps;\n};\n\nconst varSmall = {\n  hover: { scale: 1.07 },\n  tap: { scale: 0.97 },\n};\n\nconst varMedium = {\n  hover: { scale: 1.06 },\n  tap: { scale: 0.98 },\n};\n\nconst varLarge = {\n  hover: { scale: 1.05 },\n  tap: { scale: 0.99 },\n};\n\nfunction AnimateWrap({ size, children, sxWrap }: AnimateWrapProp) {\n  const isSmall = size === 'small';\n  const isLarge = size === 'large';\n\n  return (\n    <Box\n      component={m.div}\n      whileTap=\"tap\"\n      whileHover=\"hover\"\n      variants={(isSmall && varSmall) || (isLarge && varLarge) || varMedium}\n      sx={{\n        display: 'inline-flex',\n        ...sxWrap,\n      }}\n    >\n      {children}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}