{"ast":null,"code":"import { noCase } from 'change-case'; // _mock\n\nimport _mock from './_mock';\nimport { randomNumberRange, randomInArray } from './funcs'; // ----------------------------------------------------------------------\n\nexport const _appRelated = ['Chrome', 'Drive', 'Dropbox', 'Evernote', 'Github'].map((appName, index) => ({\n  id: _mock.id(index),\n  name: appName,\n  system: index === 2 && 'Windows' || index === 4 && 'Windows' || 'Mac',\n  price: index === 0 || index === 2 || index === 4 ? 0 : _mock.number.price(index),\n  rating: _mock.number.rating(index),\n  review: randomNumberRange(999, 99999),\n  shortcut: `https://minimal-assets-api.vercel.app/assets/icons/ic_${noCase(appName)}.svg`\n}));\nexport const _appInstalled = ['de', 'en', 'fr', 'kr', 'us'].map((country, index) => ({\n  id: _mock.id(index),\n  name: ['Germany', 'England', 'France', 'Korean', 'USA'][index],\n  android: randomNumberRange(999, 99999),\n  windows: randomNumberRange(999, 99999),\n  apple: randomNumberRange(999, 99999),\n  flag: `https://minimal-assets-api.vercel.app/assets/icons/ic_flag_${country}.svg`\n}));\nexport const _appAuthors = [...Array(3)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  favourite: randomNumberRange(9999, 19999)\n}));\nexport const _appInvoices = [...Array(5)].map((_, index) => ({\n  id: `${Date.now() + index}`,\n  price: _mock.number.price(index),\n  category: randomInArray(['Android', 'Mac', 'Windows']),\n  status: randomInArray(['paid', 'out_of_date', 'in_progress'])\n}));\nexport const _appFeatured = [...Array(3)].map((_, index) => ({\n  id: _mock.id(index),\n  title: ['Harry Potter and the Deathly Hallows - Part 2', 'Disney Zombies 2', 'Lightroom mobile - Koloro'][index],\n  description: _mock.text.title(index),\n  image: _mock.image.feed(index)\n}));","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/_mock/_app.ts"],"names":["noCase","_mock","randomNumberRange","randomInArray","_appRelated","map","appName","index","id","name","system","price","number","rating","review","shortcut","_appInstalled","country","android","windows","apple","flag","_appAuthors","Array","_","fullName","avatar","image","favourite","_appInvoices","Date","now","category","status","_appFeatured","title","description","text","feed"],"mappings":"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","sourcesContent":["import { noCase } from 'change-case';\n// _mock\nimport _mock from './_mock';\nimport { randomNumberRange, randomInArray } from './funcs';\n\n// ----------------------------------------------------------------------\n\nexport const _appRelated = ['Chrome', 'Drive', 'Dropbox', 'Evernote', 'Github'].map(\n  (appName, index) => ({\n    id: _mock.id(index),\n    name: appName,\n    system: (index === 2 && 'Windows') || (index === 4 && 'Windows') || 'Mac',\n    price: index === 0 || index === 2 || index === 4 ? 0 : _mock.number.price(index),\n    rating: _mock.number.rating(index),\n    review: randomNumberRange(999, 99999),\n    shortcut: `https://minimal-assets-api.vercel.app/assets/icons/ic_${noCase(appName)}.svg`,\n  })\n);\n\nexport const _appInstalled = ['de', 'en', 'fr', 'kr', 'us'].map((country, index) => ({\n  id: _mock.id(index),\n  name: ['Germany', 'England', 'France', 'Korean', 'USA'][index],\n  android: randomNumberRange(999, 99999),\n  windows: randomNumberRange(999, 99999),\n  apple: randomNumberRange(999, 99999),\n  flag: `https://minimal-assets-api.vercel.app/assets/icons/ic_flag_${country}.svg`,\n}));\n\nexport const _appAuthors = [...Array(3)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  favourite: randomNumberRange(9999, 19999),\n}));\n\nexport const _appInvoices = [...Array(5)].map((_, index) => ({\n  id: `${Date.now() + index}`,\n  price: _mock.number.price(index),\n  category: randomInArray(['Android', 'Mac', 'Windows']),\n  status: randomInArray(['paid', 'out_of_date', 'in_progress']),\n}));\n\nexport const _appFeatured = [...Array(3)].map((_, index) => ({\n  id: _mock.id(index),\n  title: [\n    'Harry Potter and the Deathly Hallows - Part 2',\n    'Disney Zombies 2',\n    'Lightroom mobile - Koloro',\n  ][index],\n  description: _mock.text.title(index),\n  image: _mock.image.feed(index),\n}));\n"]},"metadata":{},"sourceType":"module"}