{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n  var firstChar = input.charAt(0);\n  var lowerChars = input.substr(1).toLowerCase();\n\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return \"_\" + firstChar + lowerChars;\n  }\n\n  return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return noCase(input, __assign({\n    delimiter: \"\",\n    transform: pascalCaseTransform\n  }, options));\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";AAAA,SAAS,MAAT,QAAgC,SAAhC;AAIA,OAAM,SAAU,mBAAV,CAA8B,KAA9B,EAA6C,KAA7C,EAA0D;AAC9D,MAAM,SAAS,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,CAAlB;AACA,MAAM,UAAU,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,WAAhB,EAAnB;;AACA,MAAI,KAAK,GAAG,CAAR,IAAa,SAAS,IAAI,GAA1B,IAAiC,SAAS,IAAI,GAAlD,EAAuD;AACrD,WAAO,MAAI,SAAJ,GAAgB,UAAvB;AACD;;AACD,SAAO,KAAG,SAAS,CAAC,WAAV,EAAH,GAA6B,UAApC;AACD;AAED,OAAM,SAAU,wBAAV,CAAmC,KAAnC,EAAgD;AACpD,SAAO,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,WAAhB,KAAgC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,WAAf,EAAvC;AACD;AAED,OAAM,SAAU,UAAV,CAAqB,KAArB,EAAoC,OAApC,EAAyD;AAArB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAqB;;AAC7D,SAAO,MAAM,CAAC,KAAD,EAAM,QAAA,CAAA;AACjB,IAAA,SAAS,EAAE,EADM;AAEjB,IAAA,SAAS,EAAE;AAFM,GAAA,EAGd,OAHc,CAAN,CAAb;AAKD","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options,\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}