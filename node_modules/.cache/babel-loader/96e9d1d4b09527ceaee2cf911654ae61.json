{"ast":null,"code":"var _jsxFileName = \"/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/layouts/dashboard/navbar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // @mui\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Stack, Drawer } from '@mui/material'; // hooks\n\nimport useResponsive from '../../../hooks/useResponsive';\nimport useCollapseDrawer from '../../../hooks/useCollapseDrawer'; // utils\n\nimport cssStyles from '../../../utils/cssStyles'; // config\n\nimport { DASHBOARD_NAVBAR_WIDTH, DASHBOARD_NAVBAR_COLLAPSE_WIDTH } from '../../../config'; // components\n\nimport Logo from '../../../components/Logo';\nimport Scrollbar from '../../../components/Scrollbar';\nimport NavSection from '../../../components/nav-section'; //\n\nimport NavbarAccount from './NavbarAccount';\nimport NavbarDocs from './NavbarDocs';\nimport CollapseButton from './CollapseButton';\nimport navConfig from './NavConfig'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [theme.breakpoints.up('lg')]: {\n      flexShrink: 0,\n      transition: theme.transitions.create('width', {\n        duration: theme.transitions.duration.shorter\n      })\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function DashboardNavbar(_ref2) {\n  _s();\n\n  let {\n    isOpenSidebar,\n    onCloseSidebar\n  } = _ref2;\n  const theme = useTheme();\n  const {\n    pathname\n  } = useLocation();\n  const isDesktop = useResponsive('up', 'lg');\n  const {\n    isCollapse,\n    collapseClick,\n    collapseHover,\n    onToggleCollapse,\n    onHoverEnter,\n    onHoverLeave\n  } = useCollapseDrawer();\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const renderContent = /*#__PURE__*/_jsxDEV(Scrollbar, {\n    sx: {\n      height: 1,\n      '& .simplebar-content': {\n        height: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      sx: {\n        pt: 3,\n        pb: 2,\n        px: 2.5,\n        flexShrink: 0,\n        ...(isCollapse && {\n          alignItems: 'center'\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), isDesktop && !isCollapse && /*#__PURE__*/_jsxDEV(CollapseButton, {\n          onToggleCollapse: onToggleCollapse,\n          collapseClick: collapseClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavbarAccount, {\n        isCollapse: isCollapse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavSection, {\n      navConfig: navConfig,\n      isCollapse: isCollapse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), !isCollapse && /*#__PURE__*/_jsxDEV(NavbarDocs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    sx: {\n      width: {\n        lg: isCollapse ? DASHBOARD_NAVBAR_COLLAPSE_WIDTH : DASHBOARD_NAVBAR_WIDTH\n      },\n      ...(collapseClick && {\n        position: 'absolute'\n      })\n    },\n    children: [!isDesktop && /*#__PURE__*/_jsxDEV(Drawer, {\n      open: isOpenSidebar,\n      onClose: onCloseSidebar,\n      PaperProps: {\n        sx: {\n          width: DASHBOARD_NAVBAR_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), isDesktop && /*#__PURE__*/_jsxDEV(Drawer, {\n      open: true,\n      variant: \"persistent\",\n      onMouseEnter: onHoverEnter,\n      onMouseLeave: onHoverLeave,\n      PaperProps: {\n        sx: {\n          width: DASHBOARD_NAVBAR_WIDTH,\n          borderRightStyle: 'dashed',\n          bgcolor: 'background.default',\n          transition: theme => theme.transitions.create('width', {\n            duration: theme.transitions.duration.standard\n          }),\n          ...(isCollapse && {\n            width: DASHBOARD_NAVBAR_COLLAPSE_WIDTH\n          }),\n          ...(collapseHover && { ...cssStyles(theme).bgBlur(),\n            boxShadow: theme => theme.customShadows.z24\n          })\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardNavbar, \"5ix8A0mi040JQ9pSyRwKeG3cJU0=\", false, function () {\n  return [useTheme, useLocation, useResponsive, useCollapseDrawer];\n});\n\n_c = DashboardNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbar\");","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/layouts/dashboard/navbar/index.tsx"],"names":["useEffect","useLocation","styled","useTheme","Box","Stack","Drawer","useResponsive","useCollapseDrawer","cssStyles","DASHBOARD_NAVBAR_WIDTH","DASHBOARD_NAVBAR_COLLAPSE_WIDTH","Logo","Scrollbar","NavSection","NavbarAccount","NavbarDocs","CollapseButton","navConfig","RootStyle","theme","breakpoints","up","flexShrink","transition","transitions","create","duration","shorter","DashboardNavbar","isOpenSidebar","onCloseSidebar","pathname","isDesktop","isCollapse","collapseClick","collapseHover","onToggleCollapse","onHoverEnter","onHoverLeave","renderContent","height","display","flexDirection","pt","pb","px","alignItems","flexGrow","width","lg","position","sx","borderRightStyle","bgcolor","standard","bgBlur","boxShadow","customShadows","z24"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n// @mui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Stack, Drawer } from '@mui/material';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\nimport useCollapseDrawer from '../../../hooks/useCollapseDrawer';\n// utils\nimport cssStyles from '../../../utils/cssStyles';\n// config\nimport { DASHBOARD_NAVBAR_WIDTH, DASHBOARD_NAVBAR_COLLAPSE_WIDTH } from '../../../config';\n// components\nimport Logo from '../../../components/Logo';\nimport Scrollbar from '../../../components/Scrollbar';\nimport NavSection from '../../../components/nav-section';\n//\nimport NavbarAccount from './NavbarAccount';\nimport NavbarDocs from './NavbarDocs';\nimport CollapseButton from './CollapseButton';\nimport navConfig from './NavConfig';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    transition: theme.transitions.create('width', {\n      duration: theme.transitions.duration.shorter,\n    }),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isOpenSidebar: boolean;\n  onCloseSidebar: VoidFunction;\n};\n\nexport default function DashboardNavbar({ isOpenSidebar, onCloseSidebar }: Props) {\n  const theme = useTheme();\n\n  const { pathname } = useLocation();\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const { isCollapse, collapseClick, collapseHover, onToggleCollapse, onHoverEnter, onHoverLeave } =\n    useCollapseDrawer();\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: 1,\n        '& .simplebar-content': { height: 1, display: 'flex', flexDirection: 'column' },\n      }}\n    >\n      <Stack\n        spacing={3}\n        sx={{\n          pt: 3,\n          pb: 2,\n          px: 2.5,\n          flexShrink: 0,\n          ...(isCollapse && { alignItems: 'center' }),\n        }}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Logo />\n\n          {isDesktop && !isCollapse && (\n            <CollapseButton onToggleCollapse={onToggleCollapse} collapseClick={collapseClick} />\n          )}\n        </Stack>\n\n        <NavbarAccount isCollapse={isCollapse} />\n      </Stack>\n\n      <NavSection navConfig={navConfig} isCollapse={isCollapse} />\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      {!isCollapse && <NavbarDocs />}\n    </Scrollbar>\n  );\n\n  return (\n    <RootStyle\n      sx={{\n        width: {\n          lg: isCollapse ? DASHBOARD_NAVBAR_COLLAPSE_WIDTH : DASHBOARD_NAVBAR_WIDTH,\n        },\n        ...(collapseClick && {\n          position: 'absolute',\n        }),\n      }}\n    >\n      {!isDesktop && (\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          PaperProps={{ sx: { width: DASHBOARD_NAVBAR_WIDTH } }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n\n      {isDesktop && (\n        <Drawer\n          open\n          variant=\"persistent\"\n          onMouseEnter={onHoverEnter}\n          onMouseLeave={onHoverLeave}\n          PaperProps={{\n            sx: {\n              width: DASHBOARD_NAVBAR_WIDTH,\n              borderRightStyle: 'dashed',\n              bgcolor: 'background.default',\n              transition: (theme) =>\n                theme.transitions.create('width', {\n                  duration: theme.transitions.duration.standard,\n                }),\n              ...(isCollapse && {\n                width: DASHBOARD_NAVBAR_COLLAPSE_WIDTH,\n              }),\n              ...(collapseHover && {\n                ...cssStyles(theme).bgBlur(),\n                boxShadow: (theme) => theme.customShadows.z24,\n              }),\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}