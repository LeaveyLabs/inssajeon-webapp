{"ast":null,"code":"var _jsxFileName = \"/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/theme/overrides/Alert.tsx\";\n// @mui\n// theme\n//\nimport { ErrorIcon, InfoIcon, SuccessIcon, WarningIcon } from './CustomIcons'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Alert(theme) {\n  const isLight = theme.palette.mode === 'light';\n\n  const standardStyle = color => ({\n    color: theme.palette[color][isLight ? 'darker' : 'lighter'],\n    backgroundColor: theme.palette[color][isLight ? 'lighter' : 'darker'],\n    '& .MuiAlert-icon': {\n      color: theme.palette[color][isLight ? 'main' : 'light']\n    }\n  });\n\n  const filledStyle = color => ({\n    color: theme.palette[color].contrastText\n  });\n\n  const outlinedStyle = color => ({\n    color: theme.palette[color][isLight ? 'darker' : 'lighter'],\n    border: `solid 1px ${theme.palette[color][isLight ? 'light' : 'dark']}`,\n    backgroundColor: theme.palette[color][isLight ? 'lighter' : 'darker'],\n    '& .MuiAlert-icon': {\n      color: theme.palette[color][isLight ? 'main' : 'light']\n    }\n  });\n\n  return {\n    MuiAlert: {\n      defaultProps: {\n        iconMapping: {\n          info: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this),\n          success: /*#__PURE__*/_jsxDEV(SuccessIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this),\n          warning: /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 20\n          }, this),\n          error: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 18\n          }, this)\n        }\n      },\n      styleOverrides: {\n        message: {\n          '& .MuiAlertTitle-root': {\n            marginBottom: theme.spacing(0.5)\n          }\n        },\n        action: {\n          '& button:not(:first-of-type)': {\n            marginLeft: theme.spacing(1)\n          }\n        },\n        standardInfo: standardStyle('info'),\n        standardSuccess: standardStyle('success'),\n        standardWarning: standardStyle('warning'),\n        standardError: standardStyle('error'),\n        filledInfo: filledStyle('info'),\n        filledSuccess: filledStyle('success'),\n        filledWarning: filledStyle('warning'),\n        filledError: filledStyle('error'),\n        outlinedInfo: outlinedStyle('info'),\n        outlinedSuccess: outlinedStyle('success'),\n        outlinedWarning: outlinedStyle('warning'),\n        outlinedError: outlinedStyle('error')\n      }\n    }\n  };\n}\n_c = Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/theme/overrides/Alert.tsx"],"names":["ErrorIcon","InfoIcon","SuccessIcon","WarningIcon","Alert","theme","isLight","palette","mode","standardStyle","color","backgroundColor","filledStyle","contrastText","outlinedStyle","border","MuiAlert","defaultProps","iconMapping","info","success","warning","error","styleOverrides","message","marginBottom","spacing","action","marginLeft","standardInfo","standardSuccess","standardWarning","standardError","filledInfo","filledSuccess","filledWarning","filledError","outlinedInfo","outlinedSuccess","outlinedWarning","outlinedError"],"mappings":";AAAA;AAEA;AAEA;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,WAA3C,QAA8D,eAA9D,C,CAEA;;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA6B;AAC1C,QAAMC,OAAO,GAAGD,KAAK,CAACE,OAAN,CAAcC,IAAd,KAAuB,OAAvC;;AAEA,QAAMC,aAAa,GAAIC,KAAD,KAAyB;AAC7CA,IAAAA,KAAK,EAAEL,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBJ,OAAO,GAAG,QAAH,GAAc,SAA1C,CADsC;AAE7CK,IAAAA,eAAe,EAAEN,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBJ,OAAO,GAAG,SAAH,GAAe,QAA3C,CAF4B;AAG7C,wBAAoB;AAClBI,MAAAA,KAAK,EAAEL,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBJ,OAAO,GAAG,MAAH,GAAY,OAAxC;AADW;AAHyB,GAAzB,CAAtB;;AAQA,QAAMM,WAAW,GAAIF,KAAD,KAAyB;AAC3CA,IAAAA,KAAK,EAAEL,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBG;AADe,GAAzB,CAApB;;AAIA,QAAMC,aAAa,GAAIJ,KAAD,KAAyB;AAC7CA,IAAAA,KAAK,EAAEL,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBJ,OAAO,GAAG,QAAH,GAAc,SAA1C,CADsC;AAE7CS,IAAAA,MAAM,EAAG,aAAYV,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBJ,OAAO,GAAG,OAAH,GAAa,MAAzC,CAAiD,EAFzB;AAG7CK,IAAAA,eAAe,EAAEN,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBJ,OAAO,GAAG,SAAH,GAAe,QAA3C,CAH4B;AAI7C,wBAAoB;AAClBI,MAAAA,KAAK,EAAEL,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBJ,OAAO,GAAG,MAAH,GAAY,OAAxC;AADW;AAJyB,GAAzB,CAAtB;;AASA,SAAO;AACLU,IAAAA,QAAQ,EAAE;AACRC,MAAAA,YAAY,EAAE;AACZC,QAAAA,WAAW,EAAE;AACXC,UAAAA,IAAI,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADK;AAEXC,UAAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAFE;AAGXC,UAAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAHE;AAIXC,UAAAA,KAAK,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAJI;AADD,OADN;AAURC,MAAAA,cAAc,EAAE;AACdC,QAAAA,OAAO,EAAE;AACP,mCAAyB;AACvBC,YAAAA,YAAY,EAAEpB,KAAK,CAACqB,OAAN,CAAc,GAAd;AADS;AADlB,SADK;AAMdC,QAAAA,MAAM,EAAE;AACN,0CAAgC;AAC9BC,YAAAA,UAAU,EAAEvB,KAAK,CAACqB,OAAN,CAAc,CAAd;AADkB;AAD1B,SANM;AAYdG,QAAAA,YAAY,EAAEpB,aAAa,CAAC,MAAD,CAZb;AAadqB,QAAAA,eAAe,EAAErB,aAAa,CAAC,SAAD,CAbhB;AAcdsB,QAAAA,eAAe,EAAEtB,aAAa,CAAC,SAAD,CAdhB;AAeduB,QAAAA,aAAa,EAAEvB,aAAa,CAAC,OAAD,CAfd;AAiBdwB,QAAAA,UAAU,EAAErB,WAAW,CAAC,MAAD,CAjBT;AAkBdsB,QAAAA,aAAa,EAAEtB,WAAW,CAAC,SAAD,CAlBZ;AAmBduB,QAAAA,aAAa,EAAEvB,WAAW,CAAC,SAAD,CAnBZ;AAoBdwB,QAAAA,WAAW,EAAExB,WAAW,CAAC,OAAD,CApBV;AAsBdyB,QAAAA,YAAY,EAAEvB,aAAa,CAAC,MAAD,CAtBb;AAuBdwB,QAAAA,eAAe,EAAExB,aAAa,CAAC,SAAD,CAvBhB;AAwBdyB,QAAAA,eAAe,EAAEzB,aAAa,CAAC,SAAD,CAxBhB;AAyBd0B,QAAAA,aAAa,EAAE1B,aAAa,CAAC,OAAD;AAzBd;AAVR;AADL,GAAP;AAwCD;KAhEuBV,K","sourcesContent":["// @mui\nimport { Theme } from '@mui/material/styles';\n// theme\nimport { ColorSchema } from '../palette';\n//\nimport { ErrorIcon, InfoIcon, SuccessIcon, WarningIcon } from './CustomIcons';\n\n// ----------------------------------------------------------------------\n\nexport default function Alert(theme: Theme) {\n  const isLight = theme.palette.mode === 'light';\n\n  const standardStyle = (color: ColorSchema) => ({\n    color: theme.palette[color][isLight ? 'darker' : 'lighter'],\n    backgroundColor: theme.palette[color][isLight ? 'lighter' : 'darker'],\n    '& .MuiAlert-icon': {\n      color: theme.palette[color][isLight ? 'main' : 'light'],\n    },\n  });\n\n  const filledStyle = (color: ColorSchema) => ({\n    color: theme.palette[color].contrastText,\n  });\n\n  const outlinedStyle = (color: ColorSchema) => ({\n    color: theme.palette[color][isLight ? 'darker' : 'lighter'],\n    border: `solid 1px ${theme.palette[color][isLight ? 'light' : 'dark']}`,\n    backgroundColor: theme.palette[color][isLight ? 'lighter' : 'darker'],\n    '& .MuiAlert-icon': {\n      color: theme.palette[color][isLight ? 'main' : 'light'],\n    },\n  });\n\n  return {\n    MuiAlert: {\n      defaultProps: {\n        iconMapping: {\n          info: <InfoIcon />,\n          success: <SuccessIcon />,\n          warning: <WarningIcon />,\n          error: <ErrorIcon />,\n        },\n      },\n\n      styleOverrides: {\n        message: {\n          '& .MuiAlertTitle-root': {\n            marginBottom: theme.spacing(0.5),\n          },\n        },\n        action: {\n          '& button:not(:first-of-type)': {\n            marginLeft: theme.spacing(1),\n          },\n        },\n\n        standardInfo: standardStyle('info'),\n        standardSuccess: standardStyle('success'),\n        standardWarning: standardStyle('warning'),\n        standardError: standardStyle('error'),\n\n        filledInfo: filledStyle('info'),\n        filledSuccess: filledStyle('success'),\n        filledWarning: filledStyle('warning'),\n        filledError: filledStyle('error'),\n\n        outlinedInfo: outlinedStyle('info'),\n        outlinedSuccess: outlinedStyle('success'),\n        outlinedWarning: outlinedStyle('warning'),\n        outlinedError: outlinedStyle('error'),\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}