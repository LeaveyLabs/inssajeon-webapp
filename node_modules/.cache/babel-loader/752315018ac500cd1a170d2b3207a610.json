{"ast":null,"code":"var _jsxFileName = \"/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/components/ThemeColorPresets.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react'; // @mui\n\nimport { ThemeProvider, createTheme, useTheme } from '@mui/material/styles'; // hooks\n//\n\nimport componentsOverride from '../theme/overrides'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeColorPresets(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const defaultTheme = useTheme();\n  const themeOptions = useMemo(() => ({ ...defaultTheme,\n    palette: { ...defaultTheme.palette\n    },\n    customShadows: { ...defaultTheme.customShadows\n    }\n  }), [defaultTheme]);\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ThemeColorPresets, \"NUkOWfbmM99HqCNdE0nKwTvAJRQ=\", false, function () {\n  return [useTheme];\n});\n\n_c = ThemeColorPresets;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeColorPresets\");","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/components/ThemeColorPresets.tsx"],"names":["useMemo","ThemeProvider","createTheme","useTheme","componentsOverride","ThemeColorPresets","children","defaultTheme","themeOptions","palette","customShadows","theme","components"],"mappings":";;;AAAA,SAAoBA,OAApB,QAAmC,OAAnC,C,CACA;;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,sBAArD,C,CACA;AACA;;AACA,OAAOC,kBAAP,MAA+B,oBAA/B,C,CAEA;;;AAMA,eAAe,SAASC,iBAAT,OAAgD;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAC7D,QAAMC,YAAY,GAAGJ,QAAQ,EAA7B;AAEA,QAAMK,YAAY,GAAGR,OAAO,CAC1B,OAAO,EACL,GAAGO,YADE;AAELE,IAAAA,OAAO,EAAE,EACP,GAAGF,YAAY,CAACE;AADT,KAFJ;AAKLC,IAAAA,aAAa,EAAE,EACb,GAAGH,YAAY,CAACG;AADH;AALV,GAAP,CAD0B,EAU1B,CAACH,YAAD,CAV0B,CAA5B;AAaA,QAAMI,KAAK,GAAGT,WAAW,CAACM,YAAD,CAAzB;AACAG,EAAAA,KAAK,CAACC,UAAN,GAAmBR,kBAAkB,CAACO,KAAD,CAArC;AAEA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,KAAtB;AAAA,cAA8BL;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApBuBD,iB;UACDF,Q;;;KADCE,iB","sourcesContent":["import { ReactNode, useMemo } from 'react';\n// @mui\nimport { ThemeProvider, createTheme, useTheme } from '@mui/material/styles';\n// hooks\n//\nimport componentsOverride from '../theme/overrides';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport default function ThemeColorPresets({ children }: Props) {\n  const defaultTheme = useTheme();\n\n  const themeOptions = useMemo(\n    () => ({\n      ...defaultTheme,\n      palette: {\n        ...defaultTheme.palette,\n      },\n      customShadows: {\n        ...defaultTheme.customShadows,\n      }\n    }),\n    [defaultTheme]\n  );\n\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n"]},"metadata":{},"sourceType":"module"}