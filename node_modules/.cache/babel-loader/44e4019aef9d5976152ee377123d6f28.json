{"ast":null,"code":"var _jsxFileName = \"/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/theme/index.tsx\";\n// @mui\nimport { CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider as MUIThemeProvider, StyledEngineProvider } from '@mui/material/styles'; //\n\nimport palette from './palette';\nimport typography from './typography';\nimport breakpoints from './breakpoints';\nimport componentsOverride from './overrides';\nimport shadows, { customShadows } from './shadows'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const isLight = true;\n  const themeOptions = {\n    palette: isLight ? palette.light : palette.dark,\n    typography,\n    breakpoints,\n    shape: {\n      borderRadius: 8\n    },\n    shadows: isLight ? shadows.light : shadows.dark,\n    customShadows: isLight ? customShadows.light : customShadows.dark\n  };\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(MUIThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/theme/index.tsx"],"names":["CssBaseline","createTheme","ThemeProvider","MUIThemeProvider","StyledEngineProvider","palette","typography","breakpoints","componentsOverride","shadows","customShadows","children","isLight","themeOptions","light","dark","shape","borderRadius","theme","components"],"mappings":";AACA;AACA,SAASA,WAAT,QAA4B,eAA5B;AACA,SACEC,WADF,EAGEC,aAAa,IAAIC,gBAHnB,EAIEC,oBAJF,QAKO,sBALP,C,CAMA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,aAA/B;AACA,OAAOC,OAAP,IAAkBC,aAAlB,QAAuC,WAAvC,C,CAEA;;;AAMA,eAAe,SAASR,aAAT,OAA4C;AAAA,MAArB;AAAES,IAAAA;AAAF,GAAqB;AACzD,QAAMC,OAAO,GAAG,IAAhB;AAEA,QAAMC,YAA0B,GAAG;AACjCR,IAAAA,OAAO,EAAEO,OAAO,GAAGP,OAAO,CAACS,KAAX,GAAmBT,OAAO,CAACU,IADV;AAEjCT,IAAAA,UAFiC;AAGjCC,IAAAA,WAHiC;AAIjCS,IAAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAJ0B;AAKjCR,IAAAA,OAAO,EAAEG,OAAO,GAAGH,OAAO,CAACK,KAAX,GAAmBL,OAAO,CAACM,IALV;AAMjCL,IAAAA,aAAa,EAAEE,OAAO,GAAGF,aAAa,CAACI,KAAjB,GAAyBJ,aAAa,CAACK;AAN5B,GAAnC;AASA,QAAMG,KAAK,GAAGjB,WAAW,CAACY,YAAD,CAAzB;AACAK,EAAAA,KAAK,CAACC,UAAN,GAAmBX,kBAAkB,CAACU,KAAD,CAArC;AAEA,sBACE,QAAC,oBAAD;AAAsB,IAAA,WAAW,MAAjC;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEA,KAAzB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGP,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KAvBuBT,a","sourcesContent":["import { ReactNode } from 'react';\n// @mui\nimport { CssBaseline } from '@mui/material';\nimport {\n  createTheme,\n  ThemeOptions,\n  ThemeProvider as MUIThemeProvider,\n  StyledEngineProvider\n} from '@mui/material/styles';\n//\nimport palette from './palette';\nimport typography from './typography';\nimport breakpoints from './breakpoints';\nimport componentsOverride from './overrides';\nimport shadows, { customShadows } from './shadows';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport default function ThemeProvider({ children }: Props) {\n  const isLight = true;\n\n  const themeOptions: ThemeOptions = {\n    palette: isLight ? palette.light : palette.dark,\n    typography,\n    breakpoints,\n    shape: { borderRadius: 8 },\n    shadows: isLight ? shadows.light : shadows.dark,\n    customShadows: isLight ? customShadows.light : customShadows.dark\n  }\n\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <MUIThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MUIThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}