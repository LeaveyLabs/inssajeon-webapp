{"ast":null,"code":"/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\"\n    }\n  }\n};\n/**\n * Localized upper case.\n */\n\nexport function localeUpperCase(str, locale) {\n  var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, function (m) {\n    return lang.map[m];\n  }));\n  return upperCase(str);\n}\n/**\n * Upper case as a function.\n */\n\nexport function upperCase(str) {\n  return str.toUpperCase();\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAQA;;AAEG;AACH,IAAM,gBAAgB,GAA2B;AAC/C,EAAA,EAAE,EAAE;AACF,IAAA,MAAM,EAAE,WADN;AAEF,IAAA,GAAG,EAAE;AACH,MAAA,CAAC,EAAE;AADA;AAFH,GAD2C;AAO/C,EAAA,EAAE,EAAE;AACF,IAAA,MAAM,EAAE,WADN;AAEF,IAAA,GAAG,EAAE;AACH,MAAA,CAAC,EAAE;AADA;AAFH,GAP2C;AAa/C,EAAA,EAAE,EAAE;AACF,IAAA,MAAM,EAAE,8DADN;AAEF,IAAA,GAAG,EAAE;AACH,MAAA,EAAE,EAAE,QADD;AAEH,MAAA,EAAE,EAAE,QAFD;AAGH,MAAA,EAAE,EAAE,QAHD;AAIH,MAAA,GAAG,EAAE,QAJF;AAKH,MAAA,GAAG,EAAE,QALF;AAMH,MAAA,GAAG,EAAE;AANF;AAFH;AAb2C,CAAjD;AA0BA;;AAEG;;AACH,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAuC,MAAvC,EAAqD;AACzD,MAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAP,EAAD,CAA7B;AACA,MAAI,IAAJ,EAAU,OAAO,SAAS,CAAC,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,MAAjB,EAAyB,UAAC,CAAD,EAAE;AAAK,WAAA,IAAI,CAAC,GAAL,CAAA,CAAA,CAAA;AAAW,GAA3C,CAAD,CAAhB;AACV,SAAO,SAAS,CAAC,GAAD,CAAhB;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,SAAV,CAAoB,GAApB,EAA+B;AACnC,SAAO,GAAG,CAAC,WAAJ,EAAP;AACD","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\",\n    },\n  },\n};\n\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return upperCase(str);\n}\n\n/**\n * Upper case as a function.\n */\nexport function upperCase(str: string) {\n  return str.toUpperCase();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}