{"ast":null,"code":"var _jsxFileName = \"/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/layouts/dashboard/header/LanguagePopover.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react'; // @mui\n\nimport { MenuItem, ListItemText, Stack } from '@mui/material'; // components\n\nimport Image from '../../../components/Image';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGS = [{\n  label: 'English',\n  value: 'en',\n  icon: 'https://minimal-assets-api.vercel.app/assets/icons/ic_flag_en.svg'\n}, {\n  label: 'German',\n  value: 'de',\n  icon: 'https://minimal-assets-api.vercel.app/assets/icons/ic_flag_de.svg'\n}, {\n  label: 'French',\n  value: 'fr',\n  icon: 'https://minimal-assets-api.vercel.app/assets/icons/ic_flag_fr.svg'\n}]; // ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n      ref: anchorRef,\n      onClick: () => setOpen(true),\n      sx: {\n        padding: 0,\n        width: 44,\n        height: 44,\n        ...(open && {\n          bgcolor: 'action.selected'\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        disabledEffect: true,\n        src: LANGS[0].icon,\n        alt: LANGS[0].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: () => setOpen(false),\n      anchorEl: anchorRef.current,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 0.5,\n        sx: {\n          p: 1\n        },\n        children: LANGS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: option.value === LANGS[0].value,\n          onClick: () => setOpen(false),\n          sx: {\n            height: 40,\n            borderRadius: 1,\n            px: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            disabledEffect: true,\n            alt: option.label,\n            src: option.icon,\n            sx: {\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primaryTypographyProps: {\n              variant: 'body2'\n            },\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LanguagePopover, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = LanguagePopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/layouts/dashboard/header/LanguagePopover.tsx"],"names":["useRef","useState","MenuItem","ListItemText","Stack","Image","MenuPopover","IconButtonAnimate","LANGS","label","value","icon","LanguagePopover","anchorRef","open","setOpen","padding","width","height","bgcolor","current","p","map","option","borderRadius","px","mr","variant"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n// @mui\nimport { MenuItem, ListItemText, Stack } from '@mui/material';\n// components\nimport Image from '../../../components/Image';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst LANGS = [\n  {\n    label: 'English',\n    value: 'en',\n    icon: 'https://minimal-assets-api.vercel.app/assets/icons/ic_flag_en.svg'\n  },\n  {\n    label: 'German',\n    value: 'de',\n    icon: 'https://minimal-assets-api.vercel.app/assets/icons/ic_flag_de.svg'\n  },\n  {\n    label: 'French',\n    value: 'fr',\n    icon: 'https://minimal-assets-api.vercel.app/assets/icons/ic_flag_fr.svg'\n  }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <IconButtonAnimate\n        ref={anchorRef}\n        onClick={() => setOpen(true)}\n        sx={{\n          padding: 0,\n          width: 44,\n          height: 44,\n          ...(open && { bgcolor: 'action.selected' })\n        }}\n      >\n        <Image disabledEffect src={LANGS[0].icon} alt={LANGS[0].label} />\n      </IconButtonAnimate>\n\n      <MenuPopover open={open} onClose={() => setOpen(false)} anchorEl={anchorRef.current}>\n        <Stack spacing={0.5} sx={{ p: 1 }}>\n          {LANGS.map((option) => (\n            <MenuItem\n              key={option.value}\n              selected={option.value === LANGS[0].value}\n              onClick={() => setOpen(false)}\n              sx={{ height: 40, borderRadius: 1, px: 1 }}\n            >\n              <Image disabledEffect alt={option.label} src={option.icon} sx={{ mr: 2 }} />\n\n              <ListItemText primaryTypographyProps={{ variant: 'body2' }}>\n                {option.label}\n              </ListItemText>\n            </MenuItem>\n          ))}\n        </Stack>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}