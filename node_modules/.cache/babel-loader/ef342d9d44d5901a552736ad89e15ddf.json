{"ast":null,"code":"var _jsxFileName = \"/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/layouts/dashboard/header/ContactsPopover.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react'; // @mui\n\nimport { alpha } from '@mui/material/styles';\nimport { Avatar, Typography, ListItemText, ListItemButton, ListItemAvatar } from '@mui/material'; // utils\n\nimport { fToNow } from '../../../utils/formatTime'; // _mock_\n\nimport { _contacts } from '../../../_mock'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport BadgeStatus from '../../../components/BadgeStatus';\nimport { IconButtonAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 64;\nconst PADDING_ITEM = 1.5; // ----------------------------------------------------------------------\n\nexport default function ContactsPopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n      ref: anchorRef,\n      size: \"large\",\n      color: open ? 'primary' : 'default',\n      onClick: handleOpen,\n      sx: { ...(open && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: 'eva:people-fill',\n        width: 20,\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        width: 360,\n        p: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          p: PADDING_ITEM\n        },\n        children: [\"Contacts \", /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          children: [\"(\", _contacts.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        sx: {\n          height: ITEM_HEIGHT * 8\n        },\n        children: _contacts.map(contact => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          sx: {\n            px: PADDING_ITEM,\n            height: ITEM_HEIGHT,\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            sx: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: contact.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BadgeStatus, {\n              status: contact.status,\n              sx: {\n                position: 'absolute',\n                right: 1,\n                bottom: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primaryTypographyProps: {\n              typography: 'subtitle2',\n              mb: 0.25\n            },\n            secondaryTypographyProps: {\n              typography: 'caption'\n            },\n            primary: contact.name,\n            secondary: contact.status === 'offline' && fToNow(contact.lastActivity)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ContactsPopover, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = ContactsPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsPopover\");","map":{"version":3,"sources":["/Users/adamvnovak/code/inssajeon/inssajeon-webapp/src/layouts/dashboard/header/ContactsPopover.tsx"],"names":["useRef","useState","alpha","Avatar","Typography","ListItemText","ListItemButton","ListItemAvatar","fToNow","_contacts","Iconify","Scrollbar","MenuPopover","BadgeStatus","IconButtonAnimate","ITEM_HEIGHT","PADDING_ITEM","ContactsPopover","anchorRef","open","setOpen","handleOpen","handleClose","bgcolor","theme","palette","primary","main","action","focusOpacity","current","width","p","length","height","map","contact","px","borderRadius","position","avatar","status","right","bottom","typography","mb","name","lastActivity","id"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Avatar, Typography, ListItemText, ListItemButton, ListItemAvatar } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// _mock_\nimport { _contacts } from '../../../_mock';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport BadgeStatus from '../../../components/BadgeStatus';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst ITEM_HEIGHT = 64;\nconst PADDING_ITEM = 1.5;\n\n// ----------------------------------------------------------------------\n\nexport default function ContactsPopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <IconButtonAnimate\n        ref={anchorRef}\n        size=\"large\"\n        color={open ? 'primary' : 'default'}\n        onClick={handleOpen}\n        sx={{\n          ...(open && {\n            bgcolor: (theme) =>\n              alpha(theme.palette.primary.main, theme.palette.action.focusOpacity),\n          }),\n        }}\n      >\n        <Iconify icon={'eva:people-fill'} width={20} height={20} />\n      </IconButtonAnimate>\n\n      <MenuPopover\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorRef.current}\n        sx={{ width: 360, p: 1 }}\n      >\n        <Typography variant=\"h6\" sx={{ p: PADDING_ITEM }}>\n          Contacts <Typography component=\"span\">({_contacts.length})</Typography>\n        </Typography>\n\n        <Scrollbar sx={{ height: ITEM_HEIGHT * 8 }}>\n          {_contacts.map((contact) => (\n            <ListItemButton\n              key={contact.id}\n              sx={{ px: PADDING_ITEM, height: ITEM_HEIGHT, borderRadius: 1 }}\n            >\n              <ListItemAvatar sx={{ position: 'relative' }}>\n                <Avatar src={contact.avatar} />\n                <BadgeStatus\n                  status={contact.status}\n                  sx={{ position: 'absolute', right: 1, bottom: 1 }}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primaryTypographyProps={{ typography: 'subtitle2', mb: 0.25 }}\n                secondaryTypographyProps={{ typography: 'caption' }}\n                primary={contact.name}\n                secondary={contact.status === 'offline' && fToNow(contact.lastActivity)}\n              />\n            </ListItemButton>\n          ))}\n        </Scrollbar>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}